{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/Container/Container.js","routes.js","Components/Navigation/Navigation.js","Components/AuthNavigation/AuthNavigation.js","Components/UserMenu/default-avatar.png","Components/UserMenu/UserMenu.js","Components/AppBar/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","fetchContacts","dispatch","a","axios","get","data","message","addContact","name","number","contact","post","then","catch","error","deleteContact","id","delete","getItems","state","contacts","items","getFilter","filter","getLoading","loading","getfilterContacts","createSelector","allContacts","filterNormalize","toLowerCase","includes","createReducer","payload","_","setError","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","routes","home","register","login","Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","exact","to","activeClassName","AuthNavigation","styles","divWrapper","display","justifyContent","alignItems","paddingBottom","button","border","borderRadius","fontSize","padding","transition","backgroundColor","marginLeft","fontWeight","color","hover","transform","img","marginRight","span","UserMenu","getUsername","useDispatch","onLogout","useCallback","authOperations","logOut","style","src","defaultAvatar","alt","width","type","onClick","AppBar","PrivateRoute","isAuthenticated","redirectTo","routeProps","PublicRoute","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","getCurrentUser","fallback","path","ReactDOM","render","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","defaults","baseURL","headers","common","Authorization","credentials","response","logIn","getState","persistedToken"],"mappings":"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","file":"static/js/main.1d238c87.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error.message)));\n  };\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { createSelector } from 'reselect';\n\nconst getLoading = state => state.contacts.loading;\nconst getItems = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getfilterContacts = createSelector(\n  [getItems, getFilter],\n  (allContacts, filter) => {\n    const filterNormalize = filter.toLowerCase();\n    return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterNormalize),\n    );\n  },\n);\n\nexport default {\n  getLoading,\n  getItems,\n  getFilter,\n  getfilterContacts,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [addContactError]: setError,\n  [deleteContactError]: setError,\n  [fetchContactError]: setError,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n\nexport default routes;\n","import { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport './Navigation.scss';\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <nav className=\"navigation\">\n      <NavLink\n        exact\n        to={routes.home}\n        className=\"NavLink\"\n        activeClassName=\"NavLink--active\"\n      >\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to={routes.contacts}\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport './AuthNavigation.scss';\n\nconst AuthNavigation = () => (\n  <div className=\"authNavigation\">\n    <NavLink\n      to={routes.register}\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Register\n    </NavLink>\n    <NavLink\n      to={routes.login}\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNavigation;\n","export default __webpack_public_path__ + \"static/media/default-avatar.152568d3.png\";","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  divWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    paddingBottom: '30px',\n  },\n\n  button: {\n    border: 'none',\n    borderRadius: '5px',\n    fontSize: '16px',\n    padding: '10px',\n    transition: ' 0.3s',\n    backgroundColor: 'teal',\n    marginLeft: '10px',\n    fontWeight: '600',\n    color: 'yellow',\n  },\n\n  hover: {\n    backgroundColor: 'darkRed',\n    color: 'white',\n    transition: '0.3s',\n    transform: 'scale(1.1)',\n  },\n\n  img: {\n    marginRight: '15px',\n  },\n\n  span: {\n    fontSize: '24px',\n    marginRight: '10px',\n    color: 'blue',\n  },\n};\n\nexport default function UserMenu() {\n  const name = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n\n  const onLogout = useCallback(\n    () => dispatch(authOperations.logOut()),\n    [dispatch],\n  );\n\n  return (\n    <div style={styles.divWrapper}>\n      <img style={styles.img} src={defaultAvatar} alt=\"\" width=\"40\" />\n      <span style={styles.span}>Welcome, {name} </span>\n      <button\n        className=\"logoutButton\"\n        style={styles.button}\n        type=\"button\"\n        onClick={onLogout}\n      >\n        Logout\n      </button>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport AuthNavigation from '../AuthNavigation';\nimport UserMenu from '../UserMenu';\nimport { authSelectors } from '../../redux/auth';\nimport './AppBar.scss';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header className=\"AppBar\">\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNavigation />}\n    </header>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) => {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Container from './Components/Container/Container';\nimport AppBar from './Components/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\n\nimport './App.scss';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomePage />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterPage />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginPage />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsPage />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport App from './App';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n"],"sourceRoot":""}